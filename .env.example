# =============================================================================
# CELES.IA - ARQUIVO DE CONFIGURA√á√ÉO DE EXEMPLO
# =============================================================================
# 
# üìã INSTRU√á√ïES:
# 1. Copie este arquivo para `.env`
# 2. Preencha os valores das vari√°veis
# 3. Nunca commite o arquivo .env no Git (j√° est√° no .gitignore)
#
# üí° DICA: Use aspas apenas se o valor contiver espa√ßos
#
# =============================================================================

# =============================================================================
# ü§ñ TELEGRAM BOT - CONFIGURA√á√ïES OBRIGAT√ìRIAS
# =============================================================================

# Token do bot do Telegram (OBRIGAT√ìRIO)
# üìñ Como obter: 
#   1. Abra o Telegram e procure por @BotFather
#   2. Digite /newbot e siga as instru√ß√µes
#   3. Copie o token fornecido
TELEGRAM_BOT_TOKEN=

# URL do webhook (APENAS PARA PRODU√á√ÉO)
# üìñ Para desenvolvimento local, deixe em branco
# üåê Exemplo: https://meudominio.com/api/v1/telegram/webhook
TELEGRAM_WEBHOOK_URL=

# =============================================================================
# üåê API E SERVIDOR
# =============================================================================

# Host do servidor (0.0.0.0 para aceitar conex√µes externas)
API_HOST=0.0.0.0

# Porta do servidor
API_PORT=8000

# Chave secreta para JWT e seguran√ßa (MUDE EM PRODU√á√ÉO!)
API_SECRET_KEY=dev-secret-change-in-production

# Modo debug (true para desenvolvimento, false para produ√ß√£o)
API_DEBUG=true

# CORS - URLs permitidas (separadas por v√≠rgula)
API_CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# =============================================================================
# üß† INTELIG√äNCIA ARTIFICIAL
# =============================================================================

# Chave da API do OpenAI (RECOMENDADO para funcionalidades de IA)
# üìñ Como obter: https://platform.openai.com/api-keys
# üí∞ Pre√ßo: ~$0.01-0.06 por 1K tokens
OPENAI_API_KEY=

# Chave da API da Anthropic Claude (ALTERNATIVA ao OpenAI)
# üìñ Como obter: https://console.anthropic.com/
ANTHROPIC_API_KEY=

# Provedor padr√£o de IA (openai, anthropic, local)
LLM_DEFAULT_PROVIDER=openai

# Modelo padr√£o (gpt-4o, gpt-4-turbo, claude-3-sonnet)
LLM_DEFAULT_MODEL=gpt-4o

# Temperatura para gera√ß√£o de texto (0.0-1.0)
LLM_TEMPERATURE=0.7

# M√°ximo de tokens por resposta
LLM_MAX_TOKENS=2000

# =============================================================================
# üóÑÔ∏è BANCO DE DADOS
# =============================================================================

# URL completa do banco de dados
# üìñ PostgreSQL: postgresql://user:pass@host:port/dbname
# üìñ SQLite: sqlite:///./data/celestia.db
DATABASE_URL=sqlite:///./data/celestia.db

# Configura√ß√µes separadas (se n√£o usar DATABASE_URL)
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_NAME=celestia_db
DATABASE_USER=celestia_user
DATABASE_PASSWORD=

# Pool de conex√µes
DATABASE_POOL_SIZE=10
DATABASE_MAX_OVERFLOW=20

# =============================================================================
# ‚ö° CACHE E PERFORMANCE
# =============================================================================

# URL do Redis para cache
# üìñ Local: redis://localhost:6379/0
# üìñ Senha: redis://:password@localhost:6379/0
REDIS_URL=redis://localhost:6379/0

# TTL padr√£o do cache (em segundos)
CACHE_TTL=3600

# Tamanho m√°ximo do cache em mem√≥ria (MB)
CACHE_MAX_SIZE=100

# =============================================================================
# üï∑Ô∏è WEB SCRAPING
# =============================================================================

# Delay entre requisi√ß√µes (segundos)
SCRAPING_DELAY=2

# M√°ximo de tentativas em caso de erro
SCRAPING_MAX_RETRIES=3

# Timeout para requisi√ß√µes (segundos)
SCRAPING_REQUEST_TIMEOUT=30

# User-Agent para scraping
SCRAPING_USER_AGENT="Mozilla/5.0 (compatible; CelesiaBot/2.0)"

# Usar proxy para scraping (opcional)
SCRAPING_PROXY_URL=

# =============================================================================
# üìä LOGGING E MONITORAMENTO
# =============================================================================

# N√≠vel de log (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Arquivo principal de log
LOG_FILE=logs/celestia.log

# Arquivo de log para erros
LOG_ERROR_FILE=logs/errors.log

# Rota√ß√£o de logs (tamanho em MB)
LOG_ROTATION_SIZE=10

# Reten√ß√£o de logs (dias)
LOG_RETENTION_DAYS=30

# Log para console (true/false)
LOG_TO_CONSOLE=true

# Formato do log (simple, detailed, json)
LOG_FORMAT=detailed

# =============================================================================
# üîê SEGURAN√áA
# =============================================================================

# Lista de IPs permitidos (separados por v√≠rgula, vazio = todos)
ALLOWED_IPS=

# Rate limiting - requisi√ß√µes por minuto por IP
RATE_LIMIT_PER_MINUTE=60

# Timeout para sess√µes (segundos)
SESSION_TIMEOUT=3600

# Habilitar HTTPS redirect
FORCE_HTTPS=false

# =============================================================================
# üìß NOTIFICA√á√ïES (OPCIONAL)
# =============================================================================

# Email SMTP para notifica√ß√µes de erro
SMTP_HOST=
SMTP_PORT=587
SMTP_USER=
SMTP_PASSWORD=
SMTP_FROM=noreply@celestia.bot

# Webhook para notifica√ß√µes (Slack, Discord, etc.)
WEBHOOK_URL=

# =============================================================================
# üåç CONFIGURA√á√ïES REGIONAIS
# =============================================================================

# Timezone padr√£o
TIMEZONE=America/Sao_Paulo

# Idioma padr√£o (pt-BR, en-US, es-ES)
DEFAULT_LANGUAGE=pt-BR

# Moeda padr√£o (BRL, USD, EUR)
DEFAULT_CURRENCY=BRL

# =============================================================================
# ‚úàÔ∏è INTEGRA√á√ïES COM COMPANHIAS A√âREAS
# =============================================================================

# API Key da LATAM (se dispon√≠vel)
LATAM_API_KEY=

# API Key da Azul (se dispon√≠vel)
AZUL_API_KEY=

# API Key da GOL (se dispon√≠vel)
GOL_API_KEY=

# Amadeus API (GDS global)
AMADEUS_API_KEY=
AMADEUS_API_SECRET=

# Skyscanner API
SKYSCANNER_API_KEY=

# =============================================================================
# üß™ DESENVOLVIMENTO E TESTES
# =============================================================================

# Modo de desenvolvimento (true/false)
DEV_MODE=true

# Seed para dados de teste
TEST_DATA_SEED=12345

# URL base para testes
TEST_BASE_URL=http://localhost:8000

# Banco de dados para testes
TEST_DATABASE_URL=sqlite:///./data/test_celestia.db

# =============================================================================
# üöÄ PRODU√á√ÉO
# =============================================================================

# Para produ√ß√£o, certifique-se de configurar:
# ‚úÖ API_SECRET_KEY com uma chave forte e √∫nica
# ‚úÖ API_DEBUG=false  
# ‚úÖ LOG_LEVEL=WARNING ou ERROR
# ‚úÖ DATABASE_URL com banco de produ√ß√£o
# ‚úÖ REDIS_URL com Redis de produ√ß√£o
# ‚úÖ TELEGRAM_WEBHOOK_URL com HTTPS
# ‚úÖ FORCE_HTTPS=true
# ‚úÖ Configurar ALLOWED_IPS se necess√°rio
# ‚úÖ Configurar notifica√ß√µes de erro (SMTP/Webhook)
